{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red180\green0\blue98;\red255\green255\blue255;\red0\green0\blue0;
\red77\green0\blue158;\red186\green0\blue17;\red0\green11\blue255;\red29\green133\blue25;}
{\*\expandedcolortbl;;\csgenericrgb\c70682\c0\c38264;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0;
\csgenericrgb\c30278\c0\c61966;\csgenericrgb\c72768\c0\c6662;\csgenericrgb\c0\c4459\c99822;\csgenericrgb\c11489\c52197\c9852;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab890
\pard\tx890\pardeftab890\pardirnatural\partightenfactor0

\f0\fs36 \cf2 \cb3 extension\cf4  \cf5 HomeVC\cf4  : \cf5 UICollectionViewDelegate\cf4 ,\cf5 UICollectionViewDataSource\cf4 ,\cf5 UICollectionViewDelegateFlowLayout\cf4 \{
\f1\fs24 \cf0 \

\f0\fs36 \cf4     
\f1\fs24 \cf0 \

\f0\fs36 \cf4     \cf2 func\cf4  collectionView(\cf2 _\cf4  collectionView: \cf5 UICollectionView\cf4 , numberOfItemsInSection section: \cf5 Int\cf4 ) -> \cf5 Int\cf4  \{
\f1\fs24 \cf0 \

\f0\fs36 \cf4         
\f1\fs24 \cf0 \

\f0\fs36 \cf4         \cf2 if\cf4  collectionView == cvHome\{
\f1\fs24 \cf0 \

\f0\fs36 \cf4             \cf2 return\cf4  arrServices.count
\f1\fs24 \cf0 \

\f0\fs36 \cf4         \}\cf2 else\cf4 \{
\f1\fs24 \cf0 \

\f0\fs36 \cf4             \cf2 return\cf4  arrBottom.count
\f1\fs24 \cf0 \

\f0\fs36 \cf4         \}
\f1\fs24 \cf0 \

\f0\fs36 \cf4         
\f1\fs24 \cf0 \

\f0\fs36 \cf4     \}
\f1\fs24 \cf0 \

\f0\fs36 \cf4     
\f1\fs24 \cf0 \

\f0\fs36 \cf4     \cf2 func\cf4  collectionView(\cf2 _\cf4  collectionView: \cf5 UICollectionView\cf4 , cellForItemAt indexPath: \cf5 IndexPath\cf4 ) -> \cf5 UICollectionViewCell\cf4  \{
\f1\fs24 \cf0 \

\f0\fs36 \cf4         
\f1\fs24 \cf0 \

\f0\fs36 \cf4         \cf2 if\cf4  collectionView == cvHome\{
\f1\fs24 \cf0 \

\f0\fs36 \cf4             \cf2 let\cf4  cell = collectionView.dequeueReusableCell(withReuseIdentifier: \cf6 "HomeCell"\cf4 , for: indexPath) \cf2 as\cf4 ! \cf5 HomeCell
\f1\fs24 \cf0 \

\f0\fs36 \cf4             
\f1\fs24 \cf0 \

\f0\fs36 \cf4             cell.layer.cornerRadius = \cf7 10
\f1\fs24 \cf0 \

\f0\fs36 \cf4             cell.layer.borderColor = UIColor.black.cgColor
\f1\fs24 \cf0 \

\f0\fs36 \cf4             cell.layer.borderWidth = \cf7 2.00
\f1\fs24 \cf0 \

\f0\fs36 \cf4             
\f1\fs24 \cf0 \

\f0\fs36 \cf4             cell.lblTitle.text = arrServices[indexPath.row][\cf6 "name"\cf4 ] \cf2 as\cf4 ? \cf5 String
\f1\fs24 \cf0 \

\f0\fs36 \cf4             cell.ivImage.image = UIImage(named: \cf6 "\cf4 \\\cf6 (\cf4 arrImageBottom[indexPath.row]\cf6 )"\cf4 )
\f1\fs24 \cf0 \

\f0\fs36 \cf4             
\f1\fs24 \cf0 \

\f0\fs36 \cf4             \cf2 return\cf4  cell
\f1\fs24 \cf0 \

\f0\fs36 \cf4         \}\cf2 else\cf4 \{
\f1\fs24 \cf0 \

\f0\fs36 \cf4             \cf2 let\cf4  cell = collectionView.dequeueReusableCell(withReuseIdentifier: \cf6 "BottomCell"\cf4 , for: indexPath) \cf2 as\cf4 ! \cf5 BottomCell
\f1\fs24 \cf0 \

\f0\fs36 \cf4             
\f1\fs24 \cf0 \

\f0\fs36 \cf4             cell.lblTitle.text = arrBottom[indexPath.row]
\f1\fs24 \cf0 \

\f0\fs36 \cf4             cell.ivImage.image = UIImage(named: \cf6 "\cf4 \\\cf6 (\cf4 arrImageBottom[indexPath.row]\cf6 )"\cf4 )
\f1\fs24 \cf0 \
\

\f0\fs36 \cf4             \cf2 return\cf4  cell
\f1\fs24 \cf0 \

\f0\fs36 \cf4         \}
\f1\fs24 \cf0 \

\f0\fs36 \cf4         
\f1\fs24 \cf0 \

\f0\fs36 \cf4         
\f1\fs24 \cf0 \

\f0\fs36 \cf4     \}
\f1\fs24 \cf0 \

\f0\fs36 \cf4     
\f1\fs24 \cf0 \

\f0\fs36 \cf4     \cf2 func\cf4  collectionView(\cf2 _\cf4  collectionView: \cf5 UICollectionView\cf4 , didSelectItemAt indexPath: \cf5 IndexPath\cf4 )\{
\f1\fs24 \cf0 \

\f0\fs36 \cf4         
\f1\fs24 \cf0 \

\f0\fs36 \cf4         \cf2 if\cf4  collectionView == cvHome\{
\f1\fs24 \cf0 \

\f0\fs36 \cf4             \cf2 if\cf4  indexPath.row == \cf7 0\cf4 \{
\f1\fs24 \cf0 \

\f0\fs36 \cf4                 \cf2 self\cf4 .performSegue(withIdentifier: \cf6 "toShipping"\cf4 , sender: \cf2 self\cf4 )
\f1\fs24 \cf0 \

\f0\fs36 \cf4             \}\cf2 else\cf4  \cf2 if\cf4  indexPath.row == \cf7 1\cf4 \{
\f1\fs24 \cf0 \

\f0\fs36 \cf4                 \cf2 self\cf4 .performSegue(withIdentifier: \cf6 "toTransportGoods"\cf4 , sender: \cf2 self\cf4 )
\f1\fs24 \cf0 \

\f0\fs36 \cf4             \}\cf2 else\cf4  \cf2 if\cf4  indexPath.row == \cf7 2\cf4 \{
\f1\fs24 \cf0 \

\f0\fs36 \cf4                 \cf2 self\cf4 .performSegue(withIdentifier: \cf6 "toConstruction"\cf4 , sender: \cf2 self\cf4 )
\f1\fs24 \cf0 \

\f0\fs36 \cf4             \}\cf2 else\cf4  \cf2 if\cf4  indexPath.row == \cf7 3\cf4 \{
\f1\fs24 \cf0 \

\f0\fs36 \cf4                 \cf2 self\cf4 .performSegue(withIdentifier: \cf6 "toRoadAssistance"\cf4 , sender: \cf2 self\cf4 )
\f1\fs24 \cf0 \

\f0\fs36 \cf4             \}
\f1\fs24 \cf0 \

\f0\fs36 \cf4         \}\cf2 else\cf4 \{
\f1\fs24 \cf0 \

\f0\fs36 \cf4             \cf2 if\cf4  indexPath.row == \cf7 0\cf4 \{
\f1\fs24 \cf0 \

\f0\fs36 \cf4                \cf8 // self.performSegue(withIdentifier: "toShipping", sender: self)
\f1\fs24 \cf0 \

\f0\fs36 \cf4             \}\cf2 else\cf4  \cf2 if\cf4  indexPath.row == \cf7 1\cf4 \{
\f1\fs24 \cf0 \

\f0\fs36 \cf4                 \cf2 self\cf4 .performSegue(withIdentifier: \cf6 "toBooking"\cf4 , sender: \cf2 self\cf4 )
\f1\fs24 \cf0 \

\f0\fs36 \cf4             \}
\f1\fs24 \cf0 \

\f0\fs36 \cf4         \}
\f1\fs24 \cf0 \

\f0\fs36 \cf4         
\f1\fs24 \cf0 \

\f0\fs36 \cf4        
\f1\fs24 \cf0 \

\f0\fs36 \cf4     \}
\f1\fs24 \cf0 \

\f0\fs36 \cf4     
\f1\fs24 \cf0 \

\f0\fs36 \cf4     \cf2 func\cf4  collectionView(\cf2 _\cf4  collectionView: \cf5 UICollectionView\cf4 , layout collectionViewLayout: \cf5 UICollectionViewLayout\cf4 , sizeForItemAt indexPath: \cf5 IndexPath\cf4 ) -> \cf5 CGSize\cf4  \{
\f1\fs24 \cf0 \

\f0\fs36 \cf4         
\f1\fs24 \cf0 \

\f0\fs36 \cf4         \cf2 if\cf4  collectionView == cvHome\{
\f1\fs24 \cf0 \

\f0\fs36 \cf4             \cf2 return\cf4  CGSize(width: (\cf2 self\cf4 .cvHome.frame.width - \cf7 100\cf4 ) / \cf7 2\cf4  , height: \cf7 150\cf4 )
\f1\fs24 \cf0 \

\f0\fs36 \cf4         \}\cf2 else\cf4 \{
\f1\fs24 \cf0 \

\f0\fs36 \cf4             \cf2 return\cf4  CGSize(width: (\cf2 self\cf4 .cvBottom.frame.width - \cf7 10\cf4 ) / \cf7 4\cf4  , height: \cf2 self\cf4 .cvBottom.frame.height)
\f1\fs24 \cf0 \

\f0\fs36 \cf4             \}
\f1\fs24 \cf0 \

\f0\fs36 \cf4         \}
\f1\fs24 \cf0 \

\f0\fs36 \cf4  
\f1\fs24 \cf0 \

\f0\fs36 \cf4 \}
\f1\fs24 \cf0 \
}